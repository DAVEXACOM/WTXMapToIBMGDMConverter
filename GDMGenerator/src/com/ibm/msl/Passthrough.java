//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.28 at 01:32:25 PM AEDT 
//


package com.ibm.msl;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * From v1050, a <i>Passthrough</i> provides a container mapping for elements
 * that are implicitly copied from source to target without any mapping. 
 * 
 * Has exactly one <i>input</i> and one <i>output</i> defined on it.
 * 
 * Can contain an <i>updates</i> to provide mapping to "override" the implicit
 * data copy with specific mappings that determine the target output.
 *       
 * 
 * <p>Java class for Passthrough complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Passthrough">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.ibm.com/2008/ccl/Mapping}Mapping">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.ibm.com/2008/ccl/Mapping}documentation" minOccurs="0"/>
 *         &lt;element ref="{http://www.ibm.com/2008/ccl/Mapping}input"/>
 *         &lt;element ref="{http://www.ibm.com/2008/ccl/Mapping}output"/>
 *         &lt;element ref="{http://www.ibm.com/2008/ccl/Mapping}updates" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Passthrough", propOrder = {
    "documentation",
    "input",
    "output",
    "updates"
})
public class Passthrough
    extends Mapping
{

    protected Documentation documentation;
    @XmlElement(required = true)
    protected MappingDesignator input;
    @XmlElement(required = true)
    protected MappingDesignator output;
    protected Updates updates;

    /**
     * Gets the value of the documentation property.
     * 
     * @return
     *     possible object is
     *     {@link Documentation }
     *     
     */
    public Documentation getDocumentation() {
        return documentation;
    }

    /**
     * Sets the value of the documentation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Documentation }
     *     
     */
    public void setDocumentation(Documentation value) {
        this.documentation = value;
    }

    /**
     * Gets the value of the input property.
     * 
     * @return
     *     possible object is
     *     {@link MappingDesignator }
     *     
     */
    public MappingDesignator getInput() {
        return input;
    }

    /**
     * Sets the value of the input property.
     * 
     * @param value
     *     allowed object is
     *     {@link MappingDesignator }
     *     
     */
    public void setInput(MappingDesignator value) {
        this.input = value;
    }

    /**
     * Gets the value of the output property.
     * 
     * @return
     *     possible object is
     *     {@link MappingDesignator }
     *     
     */
    public MappingDesignator getOutput() {
        return output;
    }

    /**
     * Sets the value of the output property.
     * 
     * @param value
     *     allowed object is
     *     {@link MappingDesignator }
     *     
     */
    public void setOutput(MappingDesignator value) {
        this.output = value;
    }

    /**
     * Gets the value of the updates property.
     * 
     * @return
     *     possible object is
     *     {@link Updates }
     *     
     */
    public Updates getUpdates() {
        return updates;
    }

    /**
     * Sets the value of the updates property.
     * 
     * @param value
     *     allowed object is
     *     {@link Updates }
     *     
     */
    public void setUpdates(Updates value) {
        this.updates = value;
    }

}
