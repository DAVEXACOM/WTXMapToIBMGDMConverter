//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.28 at 01:32:25 PM AEDT 
//


package com.ibm.msl;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * Mapping <i>cast<i>, is used to cast schema wildcard; any, anyType, anyAttribute
 * or substitution and derivedTypes.
 * Identifies a particular source or target wildcard, head element in a substitution group, or a base type
 * that is to be replaced or substituted with an valid alternative concrete element or attribute or
 * derived type within that source or target.
 * 
 * 
 * <b>attributes</b>
 * <ul>
 * <li><i>path</i>
 * A string designating an actual source or target component.
 * </li>
 * <li><i>var</i>
 * A <i>var</i> is a serialized string providing a variable name
 * to identify this cast instance when a node has multiple casts applied.
 * </li>
 * <li><i>qualifier</i>
 * A QName used to identify the global element, attribute or named type that will replace
 * the original component.
 * </li>
 * <li><i>castType</i>
 * From v1050, set to 'userDefined' to indicate the cast is to a user-defined element or
 * attribute from an <i>InlinedXMLSchema</i>.
 * </li>
 * </ul>
 *       
 * 
 * <p>Java class for Cast complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Cast">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="path" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="qualifier" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ref" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="var" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="castType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Cast")
public class Cast {

    @XmlAttribute(name = "path")
    protected String path;
    @XmlAttribute(name = "qualifier")
    protected String qualifier;
    @XmlAttribute(name = "ref")
    protected String ref;
    @XmlAttribute(name = "var")
    protected String var;
    @XmlAttribute(name = "castType")
    protected String castType;

    /**
     * Gets the value of the path property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPath() {
        return path;
    }

    /**
     * Sets the value of the path property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPath(String value) {
        this.path = value;
    }

    /**
     * Gets the value of the qualifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getQualifier() {
        return qualifier;
    }

    /**
     * Sets the value of the qualifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQualifier(String value) {
        this.qualifier = value;
    }

    /**
     * Gets the value of the ref property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRef() {
        return ref;
    }

    /**
     * Sets the value of the ref property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRef(String value) {
        this.ref = value;
    }

    /**
     * Gets the value of the var property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVar() {
        return var;
    }

    /**
     * Sets the value of the var property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVar(String value) {
        this.var = value;
    }

    /**
     * Gets the value of the castType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCastType() {
        return castType;
    }

    /**
     * Sets the value of the castType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCastType(String value) {
        this.castType = value;
    }

}
