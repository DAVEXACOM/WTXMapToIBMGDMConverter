//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.28 at 01:32:25 PM AEDT 
//


package com.ibm.msl;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * A <i>Sort</i> provides a means of defining a
 * sorting to a list of source nodes before 
 * iterating over them in a <i>foreach</i> 
 * or <i>group</i> transform.
 * 
 * <b>attributes</b>
 * <ul>
 * <li><i>caseOrder</i>
 * The <i>caseOrder</i> attribute specifies whether upper-case letters should sort 
 * before lower-case letters or vice-versa. The default value is language
 * dependent.
 * </li>
 * <li><i>dataOrder</i>
 * The <i>dataOrder</i> attribute specifies whether the source nodes should be sorted
 * lexicographically or according to the numeric value. The default value is 
 * <i>lexical</li>.
 * </li>
 * <li><i>modifier</i>
 * The <i>modifer</i> attribute specifies whether the source nodes should be sorted
 * in ascending or descending order. The default value is <i>ASC</i>.
 * </li>
 * <li><i>path</i>
 * The <i>path</i> attribute represents the source element or attribute that will 
 * act as the sort key.</li>
 * </ul>
 *       
 * 
 * <p>Java class for Sort complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Sort">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.ibm.com/2008/ccl/Mapping}field" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Sort", propOrder = {
    "field"
})
public class Sort {

    protected Field field;

    /**
     * Gets the value of the field property.
     * 
     * @return
     *     possible object is
     *     {@link Field }
     *     
     */
    public Field getField() {
        return field;
    }

    /**
     * Sets the value of the field property.
     * 
     * @param value
     *     allowed object is
     *     {@link Field }
     *     
     */
    public void setField(Field value) {
        this.field = value;
    }

}
