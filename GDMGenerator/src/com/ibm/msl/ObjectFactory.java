//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.28 at 01:32:25 PM AEDT 
//


package com.ibm.msl;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.ibm.msl package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Local_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "local");
    private final static QName _Condition_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "condition");
    private final static QName _Input_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "input");
    private final static QName _Function_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "function");
    private final static QName _Options_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "options");
    private final static QName _Updates_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "updates");
    private final static QName _Test_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "test");
    private final static QName _Assign_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "assign");
    private final static QName _Update_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "update");
    private final static QName _Imports_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "imports");
    private final static QName _Variable_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "variable");
    private final static QName _Lookup_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "lookup");
    private final static QName _Insert_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "insert");
    private final static QName _Override_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "override");
    private final static QName _Sort_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "sort");
    private final static QName _Remove_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "remove");
    private final static QName _Delete_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "delete");
    private final static QName _Variables_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "variables");
    private final static QName _Select_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "select");
    private final static QName _Expression_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "expression");
    private final static QName _Property_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "property");
    private final static QName _MappingRoot_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "mappingRoot");
    private final static QName _InlinedXMLSchema_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "inlinedXMLSchema");
    private final static QName _Cast_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "cast");
    private final static QName _MappingDeclaration_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "mappingDeclaration");
    private final static QName _Rdbcall_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "rdbcall");
    private final static QName _Elseif_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "elseif");
    private final static QName _Filter_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "filter");
    private final static QName _Convert_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "convert");
    private final static QName _Transaction_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "transaction");
    private final static QName _Code_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "code");
    private final static QName _Param_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "param");
    private final static QName _Passthrough_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "passthrough");
    private final static QName _Import_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "import");
    private final static QName _CustomFunction_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "customFunction");
    private final static QName _Task_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "task");
    private final static QName _If_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "if");
    private final static QName _Foreach_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "foreach");
    private final static QName _Rdbreturn_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "rdbreturn");
    private final static QName _Policy_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "policy");
    private final static QName _Field_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "field");
    private final static QName _Namespaces_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "namespaces");
    private final static QName _Return_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "return");
    private final static QName _Output_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "output");
    private final static QName _Create_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "create");
    private final static QName _Append_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "append");
    private final static QName _Group_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "group");
    private final static QName _Else_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "else");
    private final static QName _Move_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "move");
    private final static QName _Namespace_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "namespace");
    private final static QName _Join_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "join");
    private final static QName _Submap_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "submap");
    private final static QName _Generation_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "generation");
    private final static QName _Failure_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "failure");
    private final static QName _Custom_QNAME = new QName("http://www.ibm.com/2008/ccl/Mapping", "custom");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.ibm.msl
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Policy }
     * 
     */
    public Policy createPolicy() {
        return new Policy();
    }

    /**
     * Create an instance of {@link Expression }
     * 
     */
    public Expression createExpression() {
        return new Expression();
    }

    /**
     * Create an instance of {@link Assign }
     * 
     */
    public Assign createAssign() {
        return new Assign();
    }

    /**
     * Create an instance of {@link Passthrough }
     * 
     */
    public Passthrough createPassthrough() {
        return new Passthrough();
    }

    /**
     * Create an instance of {@link Test }
     * 
     */
    public Test createTest() {
        return new Test();
    }

    /**
     * Create an instance of {@link Transaction }
     * 
     */
    public Transaction createTransaction() {
        return new Transaction();
    }

    /**
     * Create an instance of {@link MappingDeclaration }
     * 
     */
    public MappingDeclaration createMappingDeclaration() {
        return new MappingDeclaration();
    }

    /**
     * Create an instance of {@link Lookup }
     * 
     */
    public Lookup createLookup() {
        return new Lookup();
    }

    /**
     * Create an instance of {@link Namespace }
     * 
     */
    public Namespace createNamespace() {
        return new Namespace();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
        return new Function();
    }

    /**
     * Create an instance of {@link MappingRoot }
     * 
     */
    public MappingRoot createMappingRoot() {
        return new MappingRoot();
    }

    /**
     * Create an instance of {@link DatabaseMapping }
     * 
     */
    public DatabaseMapping createDatabaseMapping() {
        return new DatabaseMapping();
    }

    /**
     * Create an instance of {@link Import }
     * 
     */
    public Import createImport() {
        return new Import();
    }

    /**
     * Create an instance of {@link Generation }
     * 
     */
    public Generation createGeneration() {
        return new Generation();
    }

    /**
     * Create an instance of {@link Move }
     * 
     */
    public Move createMove() {
        return new Move();
    }

    /**
     * Create an instance of {@link Custom }
     * 
     */
    public Custom createCustom() {
        return new Custom();
    }

    /**
     * Create an instance of {@link Else }
     * 
     */
    public Else createElse() {
        return new Else();
    }

    /**
     * Create an instance of {@link Append }
     * 
     */
    public Append createAppend() {
        return new Append();
    }

    /**
     * Create an instance of {@link Condition }
     * 
     */
    public Condition createCondition() {
        return new Condition();
    }

    /**
     * Create an instance of {@link Submap }
     * 
     */
    public Submap createSubmap() {
        return new Submap();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link Code }
     * 
     */
    public Code createCode() {
        return new Code();
    }

    /**
     * Create an instance of {@link Namespaces }
     * 
     */
    public Namespaces createNamespaces() {
        return new Namespaces();
    }

    /**
     * Create an instance of {@link Create }
     * 
     */
    public Create createCreate() {
        return new Create();
    }

    /**
     * Create an instance of {@link Variables }
     * 
     */
    public Variables createVariables() {
        return new Variables();
    }

    /**
     * Create an instance of {@link MappingDesignator }
     * 
     */
    public MappingDesignator createMappingDesignator() {
        return new MappingDesignator();
    }

    /**
     * Create an instance of {@link Cast }
     * 
     */
    public Cast createCast() {
        return new Cast();
    }

    /**
     * Create an instance of {@link Override }
     * 
     */
    public Override createOverride() {
        return new Override();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link Filter }
     * 
     */
    public Filter createFilter() {
        return new Filter();
    }

    /**
     * Create an instance of {@link Foreach }
     * 
     */
    public Foreach createForeach() {
        return new Foreach();
    }

    /**
     * Create an instance of {@link Sort }
     * 
     */
    public Sort createSort() {
        return new Sort();
    }

    /**
     * Create an instance of {@link Remove }
     * 
     */
    public Remove createRemove() {
        return new Remove();
    }

    /**
     * Create an instance of {@link Param }
     * 
     */
    public Param createParam() {
        return new Param();
    }

    /**
     * Create an instance of {@link Convert }
     * 
     */
    public Convert createConvert() {
        return new Convert();
    }

    /**
     * Create an instance of {@link CustomFunction }
     * 
     */
    public CustomFunction createCustomFunction() {
        return new CustomFunction();
    }

    /**
     * Create an instance of {@link Options }
     * 
     */
    public Options createOptions() {
        return new Options();
    }

    /**
     * Create an instance of {@link Updates }
     * 
     */
    public Updates createUpdates() {
        return new Updates();
    }

    /**
     * Create an instance of {@link InlinedXMLSchema }
     * 
     */
    public InlinedXMLSchema createInlinedXMLSchema() {
        return new InlinedXMLSchema();
    }

    /**
     * Create an instance of {@link Task }
     * 
     */
    public Task createTask() {
        return new Task();
    }

    /**
     * Create an instance of {@link Join }
     * 
     */
    public Join createJoin() {
        return new Join();
    }

    /**
     * Create an instance of {@link Imports }
     * 
     */
    public Imports createImports() {
        return new Imports();
    }

    /**
     * Create an instance of {@link Field }
     * 
     */
    public Field createField() {
        return new Field();
    }

    /**
     * Create an instance of {@link Documentation }
     * 
     */
    public Documentation createDocumentation() {
        return new Documentation();
    }

    /**
     * Create an instance of {@link Local }
     * 
     */
    public Local createLocal() {
        return new Local();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link Variable }
     * 
     */
    public Variable createVariable() {
        return new Variable();
    }

    /**
     * Create an instance of {@link Policy.MissingSource }
     * 
     */
    public Policy.MissingSource createPolicyMissingSource() {
        return new Policy.MissingSource();
    }

    /**
     * Create an instance of {@link Policy.EmptySource }
     * 
     */
    public Policy.EmptySource createPolicyEmptySource() {
        return new Policy.EmptySource();
    }

    /**
     * Create an instance of {@link Policy.NilSource }
     * 
     */
    public Policy.NilSource createPolicyNilSource() {
        return new Policy.NilSource();
    }

    /**
     * Create an instance of {@link Policy.UnmappedTarget }
     * 
     */
    public Policy.UnmappedTarget createPolicyUnmappedTarget() {
        return new Policy.UnmappedTarget();
    }

    /**
     * Create an instance of {@link Policy.DefaultValues }
     * 
     */
    public Policy.DefaultValues createPolicyDefaultValues() {
        return new Policy.DefaultValues();
    }

    /**
     * Create an instance of {@link Expression.Annotation }
     * 
     */
    public Expression.Annotation createExpressionAnnotation() {
        return new Expression.Annotation();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Local }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "local")
    public JAXBElement<Local> createLocal(Local value) {
        return new JAXBElement<Local>(_Local_QNAME, Local.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Condition }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "condition")
    public JAXBElement<Condition> createCondition(Condition value) {
        return new JAXBElement<Condition>(_Condition_QNAME, Condition.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MappingDesignator }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "input")
    public JAXBElement<MappingDesignator> createInput(MappingDesignator value) {
        return new JAXBElement<MappingDesignator>(_Input_QNAME, MappingDesignator.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Function }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "function")
    public JAXBElement<Function> createFunction(Function value) {
        return new JAXBElement<Function>(_Function_QNAME, Function.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Options }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "options")
    public JAXBElement<Options> createOptions(Options value) {
        return new JAXBElement<Options>(_Options_QNAME, Options.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Updates }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "updates")
    public JAXBElement<Updates> createUpdates(Updates value) {
        return new JAXBElement<Updates>(_Updates_QNAME, Updates.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Test }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "test")
    public JAXBElement<Test> createTest(Test value) {
        return new JAXBElement<Test>(_Test_QNAME, Test.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Assign }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "assign")
    public JAXBElement<Assign> createAssign(Assign value) {
        return new JAXBElement<Assign>(_Assign_QNAME, Assign.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "update")
    public JAXBElement<DatabaseMapping> createUpdate(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Update_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Imports }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "imports")
    public JAXBElement<Imports> createImports(Imports value) {
        return new JAXBElement<Imports>(_Imports_QNAME, Imports.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Variable }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "variable")
    public JAXBElement<Variable> createVariable(Variable value) {
        return new JAXBElement<Variable>(_Variable_QNAME, Variable.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Lookup }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "lookup")
    public JAXBElement<Lookup> createLookup(Lookup value) {
        return new JAXBElement<Lookup>(_Lookup_QNAME, Lookup.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "insert")
    public JAXBElement<DatabaseMapping> createInsert(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Insert_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Override }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "override")
    public JAXBElement<Override> createOverride(Override value) {
        return new JAXBElement<Override>(_Override_QNAME, Override.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Sort }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "sort")
    public JAXBElement<Sort> createSort(Sort value) {
        return new JAXBElement<Sort>(_Sort_QNAME, Sort.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Remove }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "remove")
    public JAXBElement<Remove> createRemove(Remove value) {
        return new JAXBElement<Remove>(_Remove_QNAME, Remove.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "delete")
    public JAXBElement<DatabaseMapping> createDelete(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Delete_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Variables }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "variables")
    public JAXBElement<Variables> createVariables(Variables value) {
        return new JAXBElement<Variables>(_Variables_QNAME, Variables.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "select")
    public JAXBElement<DatabaseMapping> createSelect(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Select_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Expression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "expression")
    public JAXBElement<Expression> createExpression(Expression value) {
        return new JAXBElement<Expression>(_Expression_QNAME, Expression.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Property }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "property")
    public JAXBElement<Property> createProperty(Property value) {
        return new JAXBElement<Property>(_Property_QNAME, Property.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MappingRoot }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "mappingRoot")
    public JAXBElement<MappingRoot> createMappingRoot(MappingRoot value) {
        return new JAXBElement<MappingRoot>(_MappingRoot_QNAME, MappingRoot.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InlinedXMLSchema }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "inlinedXMLSchema")
    public JAXBElement<InlinedXMLSchema> createInlinedXMLSchema(InlinedXMLSchema value) {
        return new JAXBElement<InlinedXMLSchema>(_InlinedXMLSchema_QNAME, InlinedXMLSchema.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Cast }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "cast")
    public JAXBElement<Cast> createCast(Cast value) {
        return new JAXBElement<Cast>(_Cast_QNAME, Cast.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MappingDeclaration }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "mappingDeclaration")
    public JAXBElement<MappingDeclaration> createMappingDeclaration(MappingDeclaration value) {
        return new JAXBElement<MappingDeclaration>(_MappingDeclaration_QNAME, MappingDeclaration.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "rdbcall")
    public JAXBElement<DatabaseMapping> createRdbcall(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Rdbcall_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link If }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "elseif")
    public JAXBElement<If> createElseif(If value) {
        return new JAXBElement<If>(_Elseif_QNAME, If.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Filter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "filter")
    public JAXBElement<Filter> createFilter(Filter value) {
        return new JAXBElement<Filter>(_Filter_QNAME, Filter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Convert }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "convert")
    public JAXBElement<Convert> createConvert(Convert value) {
        return new JAXBElement<Convert>(_Convert_QNAME, Convert.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Transaction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "transaction")
    public JAXBElement<Transaction> createTransaction(Transaction value) {
        return new JAXBElement<Transaction>(_Transaction_QNAME, Transaction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Code }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "code")
    public JAXBElement<Code> createCode(Code value) {
        return new JAXBElement<Code>(_Code_QNAME, Code.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Param }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "param")
    public JAXBElement<Param> createParam(Param value) {
        return new JAXBElement<Param>(_Param_QNAME, Param.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Passthrough }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "passthrough")
    public JAXBElement<Passthrough> createPassthrough(Passthrough value) {
        return new JAXBElement<Passthrough>(_Passthrough_QNAME, Passthrough.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Import }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "import")
    public JAXBElement<Import> createImport(Import value) {
        return new JAXBElement<Import>(_Import_QNAME, Import.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CustomFunction }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "customFunction")
    public JAXBElement<CustomFunction> createCustomFunction(CustomFunction value) {
        return new JAXBElement<CustomFunction>(_CustomFunction_QNAME, CustomFunction.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Task }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "task")
    public JAXBElement<Task> createTask(Task value) {
        return new JAXBElement<Task>(_Task_QNAME, Task.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link If }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "if")
    public JAXBElement<If> createIf(If value) {
        return new JAXBElement<If>(_If_QNAME, If.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Foreach }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "foreach")
    public JAXBElement<Foreach> createForeach(Foreach value) {
        return new JAXBElement<Foreach>(_Foreach_QNAME, Foreach.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "rdbreturn")
    public JAXBElement<DatabaseMapping> createRdbreturn(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Rdbreturn_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Policy }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "policy")
    public JAXBElement<Policy> createPolicy(Policy value) {
        return new JAXBElement<Policy>(_Policy_QNAME, Policy.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Field }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "field")
    public JAXBElement<Field> createField(Field value) {
        return new JAXBElement<Field>(_Field_QNAME, Field.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Namespaces }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "namespaces")
    public JAXBElement<Namespaces> createNamespaces(Namespaces value) {
        return new JAXBElement<Namespaces>(_Namespaces_QNAME, Namespaces.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "return")
    public JAXBElement<DatabaseMapping> createReturn(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Return_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MappingDesignator }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "output")
    public JAXBElement<MappingDesignator> createOutput(MappingDesignator value) {
        return new JAXBElement<MappingDesignator>(_Output_QNAME, MappingDesignator.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Create }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "create")
    public JAXBElement<Create> createCreate(Create value) {
        return new JAXBElement<Create>(_Create_QNAME, Create.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Append }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "append")
    public JAXBElement<Append> createAppend(Append value) {
        return new JAXBElement<Append>(_Append_QNAME, Append.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Group }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "group")
    public JAXBElement<Group> createGroup(Group value) {
        return new JAXBElement<Group>(_Group_QNAME, Group.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Else }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "else")
    public JAXBElement<Else> createElse(Else value) {
        return new JAXBElement<Else>(_Else_QNAME, Else.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Move }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "move")
    public JAXBElement<Move> createMove(Move value) {
        return new JAXBElement<Move>(_Move_QNAME, Move.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Namespace }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "namespace")
    public JAXBElement<Namespace> createNamespace(Namespace value) {
        return new JAXBElement<Namespace>(_Namespace_QNAME, Namespace.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Join }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "join")
    public JAXBElement<Join> createJoin(Join value) {
        return new JAXBElement<Join>(_Join_QNAME, Join.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Submap }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "submap")
    public JAXBElement<Submap> createSubmap(Submap value) {
        return new JAXBElement<Submap>(_Submap_QNAME, Submap.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Generation }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "generation")
    public JAXBElement<Generation> createGeneration(Generation value) {
        return new JAXBElement<Generation>(_Generation_QNAME, Generation.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseMapping }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "failure")
    public JAXBElement<DatabaseMapping> createFailure(DatabaseMapping value) {
        return new JAXBElement<DatabaseMapping>(_Failure_QNAME, DatabaseMapping.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Custom }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/2008/ccl/Mapping", name = "custom")
    public JAXBElement<Custom> createCustom(Custom value) {
        return new JAXBElement<Custom>(_Custom_QNAME, Custom.class, null, value);
    }

}
