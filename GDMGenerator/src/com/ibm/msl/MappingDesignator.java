//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.28 at 01:32:25 PM AEDT 
//


package com.ibm.msl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * A MappingDesignator is an relative component designator which 
 * identifies a particular source or target component relative to
 * some parent source or target component. On the mappingRoot
 * element, a MappingDesignator is a relative URI to a source or
 * target resource. 
 * 
 * <b>attributes</b>
 * <ul>
 * <li><i>path</i>
 * A <i>path</i> is a serialized string designating an 
 * actual source or target component. Format maybe defined specifically
 * dependent on the </i>mappingRoot/@domainIDExtension</i>
 * Used in the serialization path to reference parent designators. Also used
 * to resolve ambiguities such as multiple inputs referencing the same named 
 * type which are actually different.
 * </li>
 * <li><i>var</i>
 * A <i>var</i> is a serialized string providing a variable name
 * to identify this input or output designator instance when a mapping container
 * has multiple designators.
 * </li>
 * <li><i>overrideDelimiter</i>
 * This attribute is ONLY  used on the inputs of a <i>concat </i> transform.
 * The <i>overrideDelimiter</i> is a constant string value that can be added after
 * the string section (represented by this designator) on a concatenation. This 
 * override delimiter overrides any default delimiter specified on the <i>concat</i> 
 * transform itself.
 * </li>
 * <li><i>inlinedXMLSchema</i>
 * From v1050 this attribute can be set to 'true' to indicate that this MappingDesignator
 * refers to an <i>inlinedXMLSchema</i> element containing user-defined elements
 * and attributes schema definitions.
 * </li>
 * </ul>
 *       
 * 
 * <p>Java class for MappingDesignator complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MappingDesignator">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.ibm.com/2008/ccl/Mapping}cast" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="namespace" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="auxiliary" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="path" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="var" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="overrideDelimiter" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="inlinedXMLSchema" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MappingDesignator", propOrder = {
    "cast"
})
public class MappingDesignator {

    protected List<Cast> cast;
    @XmlAttribute(name = "namespace")
    protected String namespace;
    @XmlAttribute(name = "auxiliary")
    protected Boolean auxiliary;
    @XmlAttribute(name = "path")
    protected String path;
    @XmlAttribute(name = "var")
    protected String var;
    @XmlAttribute(name = "overrideDelimiter")
    protected String overrideDelimiter;
    @XmlAttribute(name = "inlinedXMLSchema")
    protected Boolean inlinedXMLSchema;

    /**
     * Gets the value of the cast property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cast property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCast().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Cast }
     * 
     * 
     */
    public List<Cast> getCast() {
        if (cast == null) {
            cast = new ArrayList<Cast>();
        }
        return this.cast;
    }

    /**
     * Gets the value of the namespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * Sets the value of the namespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNamespace(String value) {
        this.namespace = value;
    }

    /**
     * Gets the value of the auxiliary property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAuxiliary() {
        return auxiliary;
    }

    /**
     * Sets the value of the auxiliary property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAuxiliary(Boolean value) {
        this.auxiliary = value;
    }

    /**
     * Gets the value of the path property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPath() {
        return path;
    }

    /**
     * Sets the value of the path property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPath(String value) {
        this.path = value;
    }

    /**
     * Gets the value of the var property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVar() {
        return var;
    }

    /**
     * Sets the value of the var property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVar(String value) {
        this.var = value;
    }

    /**
     * Gets the value of the overrideDelimiter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOverrideDelimiter() {
        return overrideDelimiter;
    }

    /**
     * Sets the value of the overrideDelimiter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOverrideDelimiter(String value) {
        this.overrideDelimiter = value;
    }

    /**
     * Gets the value of the inlinedXMLSchema property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isInlinedXMLSchema() {
        return inlinedXMLSchema;
    }

    /**
     * Sets the value of the inlinedXMLSchema property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInlinedXMLSchema(Boolean value) {
        this.inlinedXMLSchema = value;
    }

}
